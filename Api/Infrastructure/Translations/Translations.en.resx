<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
Microsoft ResX Schema

Version 2.0

The primary goals of this format is to allow a simple XML format
that is mostly human readable. The generation and parsing of the
various data types are done through the TypeConverter classes
associated with the data types.

Example:

... ado.net/XML headers & schema ...
<resheader name="resmimetype">text/microsoft-resx</resheader>
<resheader name="version">2.0</resheader>
<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
<data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>[base64 mime encoded serialized .NET Framework object]</value>
</data>
<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
    <comment>This is a comment</comment>
</data>

There are any number of "resheader" rows that contain simple
name/value pairs.

Each data row contains a name, and value. The row also contains a
type or mimetype. Type corresponds to a .NET class that support
text/value conversion through the TypeConverter architecture.
Classes that don't support this are serialized and stored with the
mimetype set.

The mimetype is used for serialized objects, and tells the
ResXResourceReader how to depersist the object. This is currently not
extensible. For a given mimetype the value must be set accordingly:

Note - application/x-microsoft.net.object.binary.base64 is the format
that the ResXResourceWriter will generate, however the reader can
read any of the formats listed below.

mimetype: application/x-microsoft.net.object.binary.base64
value   : The object must be serialized with
        : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
        : and then encoded with base64 encoding.

mimetype: application/x-microsoft.net.object.soap.base64
value   : The object must be serialized with
        : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
        : and then encoded with base64 encoding.

mimetype: application/x-microsoft.net.object.bytearray.base64
value   : The object must be serialized into a byte array
        : using a System.ComponentModel.TypeConverter
        : and then encoded with base64 encoding.
-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
      PublicKeyToken=b77a5c561934e089
    </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
      PublicKeyToken=b77a5c561934e089
    </value>
  </resheader>
  <data name="FromCannotBeGreaterThanUntilHour" xml:space="preserve">
    <value>End hour cannot be greater than the start hour</value>
</data>
  <data name="FromCannotBeGreaterThanUntilDay" xml:space="preserve">
    <value>End date cannot be greater than the start date</value>
</data>
  <data name="LengthCannotBeMoreThan" xml:space="preserve">
    <value>Length cannot be more than {0} characters</value>
</data>
  <data name="LengthCannotBeLessThan" xml:space="preserve">
    <value>Length cannot be less than {0} characters</value>
</data>
  <data name="NameAlreadyExists" xml:space="preserve">
    <value>The name {0} already exists</value>
</data>
  <data name="AnErrorOccured" xml:space="preserve">
    <value>An error has occurred</value>
</data>
  <data name="ProjectNotFound" xml:space="preserve">
    <value>Project not found</value>
</data>
  <data name="NameCannotBeEmpty" xml:space="preserve">
    <value>Name cannot be empty</value>
</data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found</value>
</data>
  <data name="CreatingUserFailed" xml:space="preserve">
    <value>Creating the user failed</value>
</data>
  <data name="LocationNotFound" xml:space="preserve">
    <value>Location not found</value>
</data>
  <data name="DashboardTabNotFound" xml:space="preserve">
    <value>Dashboard tab not found</value>
</data>
  <data name="DescriptionCannotBeEmpty" xml:space="preserve">
    <value>Description cannot be empty</value>
</data>
  <data name="FromCannotBeGreaterThanUntilDateTime" xml:space="preserve">
    <value>End date and time cannot be greater than the start date and time</value>
</data>
  <data name="InformationCardNotFound" xml:space="preserve">
    <value>Information card not found</value>
</data>
  <data name="LatitudeOutOfBounds" xml:space="preserve">
    <value>Latitude is out of bounds</value>
</data>
  <data name="LinkCannotBeEmpty" xml:space="preserve">
    <value>Link cannot be empty</value>
</data>
  <data name="LongitudeOutOfBounds" xml:space="preserve">
    <value>Longitude is out of bounds</value>
</data>
  <data name="NoDashboardTabsFound" xml:space="preserve">
    <value>No dashboard tabs found</value>
</data>
  <data name="PageNotFound" xml:space="preserve">
    <value>Page not found</value>
</data>
  <data name="ProjectNotOwnedByUser" xml:space="preserve">
    <value>The project is not owned by the user</value>
</data>
  <data name="SequenceInterrupted" xml:space="preserve">
    <value>Sequence was interrupted</value>
</data>
  <data name="SequenceNotFoundForTab" xml:space="preserve">
    <value>No sequence found for the specified tab</value>
</data>
  <data name="TitleCannotBeEmpty" xml:space="preserve">
    <value>Title cannot be empty</value>
</data>
  <data name="UserNotLoggedIn" xml:space="preserve">
    <value>User is not logged in</value>
</data>
  <data name="AtLeastOneLayerSourceIsRequired" xml:space="preserve">
    <value>At least one layer source is required</value>
  </data>
  <data name="EventNotFound" xml:space="preserve">
    <value>Event not found</value>
  </data>
  <data name="CategoryNotFound" xml:space="preserve">
    <value>Category not found</value>
  </data>
  <data name="NoValidTranslationsFound" xml:space="preserve">
    <value>No valid translations found</value>
  </data>
  <data name="MissingProjectId" xml:space="preserve">
    <value>Missing project id</value>
  </data>
  <data name="EventNotOwnedByUser" xml:space="preserve">
    <value>Event not owned by user</value>
  </data>
  <data name="FooterItemNotFound" xml:space="preserve">
    <value>Footer items not found</value>
  </data>
  <data name="MissingThumbnail" xml:space="preserve">
    <value>Thumbnail missing</value>
  </data>
  <data name="MissingPreviewImage" xml:space="preserve">
    <value>Preview image missing</value>
  </data>
  <data name="MissingOriginalImage" xml:space="preserve">
    <value>Original image missing</value>
  </data>
  <data name="ProjectTypeInvalid" xml:space="preserve">
    <value>Project type not valid</value>
  </data>
  <data name="GeoDataSourceNotFound" xml:space="preserve">
    <value>GeoData Source not found</value>
  </data>
  <data name="GeoDataSourceTypeInvalid" xml:space="preserve">
    <value>GeoData Source not valid</value>
  </data>
</root>
